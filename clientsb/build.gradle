plugins {
	id "org.springframework.boot" version "2.2.7.RELEASE"
	id "io.spring.dependency-management" version "1.0.9.RELEASE"
	id "com.palantir.docker" version "0.22.1"
	id 'org.jetbrains.kotlin.jvm' version '1.3.72'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.3.72'
}

group = "com.github.hfantin"
version = '0.0.1'
sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

ext {
    springCloudVersion = "Hoxton.SR4"
}


dependencies {
    //springboot
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-jetty")
    implementation("org.springframework.boot:spring-boot-starter-web")
    // springcloud
    implementation("org.springframework.cloud:spring-cloud-starter-consul-all")
    // Kotlin
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    // mysql
    runtimeOnly("mysql:mysql-connector-java")
    // devtools
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    // testes unitarios
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("com.h2database:h2:1.4.199")
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.cloud:spring-cloud-dependencies:${property("springCloudVersion")}")
    }
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = JavaVersion.VERSION_11
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = JavaVersion.VERSION_11
    }
}

springBoot {
    buildInfo()
}

bootJar {
    manifest {
        attributes(
                'Implementation-Title': 'client-sb',
                'Implementation-Version': version,
        )
    }
}


docker {
    dependsOn build
    // name "${project.group}/${jar.archiveBaseName.get()}"
    name "github.com/hfantin/${jar.archiveBaseName.get()}"
    files bootJar.archiveFile
    buildArgs(['JAR_FILE': "${bootJar.archiveFileName.get()}"])
}